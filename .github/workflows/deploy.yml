name: Deploy
on:
  push:
    branches: ['main']

jobs:
  deploy:
    runs-on: [self-hosted, florabot]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Backup current container
        run: |
          cd ${{ secrets.APP_PATH }}
          echo "Tagging current container as backup..."
          docker image rm florabot:backup || true
          docker commit discord-florabot florabot:backup || echo "No existing container to backup"

      - name: Pull latest code
        run: |
          cd ${{ secrets.APP_PATH }}
          git fetch origin main
          git reset --hard origin/main

      - name: Build new container
        run: |
          cd ${{ secrets.APP_PATH }}
          docker compose pull
          docker compose --env-file .env build

      - name: Run tests (placeholder)
        run: |
          cd ${{ secrets.APP_PATH }}
          # Example test placeholder: replace with real commands later
          # docker compose run --rm florabot npm test
          echo "✅ Skipping tests for now (add your test commands here)"

      - name: Deploy new container
        run: |
          cd ${{ secrets.APP_PATH }}
          docker compose --env-file .env up -d

      - name: Wait 5 seconds for container startup
        run: sleep 5

      - name: Verify container is running
        run: |
          cd ${{ secrets.APP_PATH }}
          if docker compose ps | grep -q "discord-florabot"; then
            echo "✅ Florabot container is running"
          else
            echo "❌ Florabot container failed to start, rolling back..."
            docker rm -f discord-florabot || true
            docker run -d --name discord-florabot florabot:backup
            exit 1
          fi

      - name: Clean up old images
        run: docker image prune -f
